GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from crackme_v2_fuzz...(no debugging symbols found)...done.
(gdb) Dump of assembler code for function main:
   0x00000000004005b6 <+0>:	push   %rbp
   0x00000000004005b7 <+1>:	mov    %rsp,%rbp
   0x00000000004005ba <+4>:	push   %rbx
   0x00000000004005bb <+5>:	sub    $0x28,%rsp
   0x00000000004005bf <+9>:	mov    %edi,-0x24(%rbp)
   0x00000000004005c2 <+12>:	mov    %rsi,-0x30(%rbp)
   0x00000000004005c6 <+16>:	cmpl   $0x2,-0x24(%rbp)
   0x00000000004005ca <+20>:	jne    0x40065c <main+166>
   0x00000000004005d0 <+26>:	mov    -0x30(%rbp),%rax
   0x00000000004005d4 <+30>:	add    $0x8,%rax
   0x00000000004005d8 <+34>:	mov    (%rax),%rax
   0x00000000004005db <+37>:	mov    %rax,%rsi
   0x00000000004005de <+40>:	mov    $0x400704,%edi
   0x00000000004005e3 <+45>:	mov    $0x0,%eax
   0x00000000004005e8 <+50>:	callq  0x400490 <printf@plt>
   0x00000000004005ed <+55>:	movl   $0x0,-0x18(%rbp)
   0x00000000004005f4 <+62>:	movl   $0x0,-0x14(%rbp)
   0x00000000004005fb <+69>:	jmp    0x40061d <main+103>
   0x00000000004005fd <+71>:	mov    -0x30(%rbp),%rax
   0x0000000000400601 <+75>:	add    $0x8,%rax
   0x0000000000400605 <+79>:	mov    (%rax),%rdx
   0x0000000000400608 <+82>:	mov    -0x14(%rbp),%eax
   0x000000000040060b <+85>:	cltq   
   0x000000000040060d <+87>:	add    %rdx,%rax
   0x0000000000400610 <+90>:	movzbl (%rax),%eax
   0x0000000000400613 <+93>:	movsbl %al,%eax
   0x0000000000400616 <+96>:	add    %eax,-0x18(%rbp)
   0x0000000000400619 <+99>:	addl   $0x1,-0x14(%rbp)
   0x000000000040061d <+103>:	mov    -0x14(%rbp),%eax
   0x0000000000400620 <+106>:	movslq %eax,%rbx
   0x0000000000400623 <+109>:	mov    -0x30(%rbp),%rax
   0x0000000000400627 <+113>:	add    $0x8,%rax
   0x000000000040062b <+117>:	mov    (%rax),%rax
   0x000000000040062e <+120>:	mov    %rax,%rdi
   0x0000000000400631 <+123>:	callq  0x400480 <strlen@plt>
   0x0000000000400636 <+128>:	cmp    %rax,%rbx
   0x0000000000400639 <+131>:	jb     0x4005fd <main+71>
   0x000000000040063b <+133>:	cmpl   $0x544,-0x18(%rbp)
   0x0000000000400642 <+140>:	jne    0x400650 <main+154>
   0x0000000000400644 <+142>:	mov    $0x400721,%edi
   0x0000000000400649 <+147>:	callq  0x400470 <puts@plt>
   0x000000000040064e <+152>:	jmp    0x400666 <main+176>
   0x0000000000400650 <+154>:	mov    $0x40072c,%edi
   0x0000000000400655 <+159>:	callq  0x400470 <puts@plt>
   0x000000000040065a <+164>:	jmp    0x400666 <main+176>
   0x000000000040065c <+166>:	mov    $0x400735,%edi
   0x0000000000400661 <+171>:	callq  0x400470 <puts@plt>
   0x0000000000400666 <+176>:	mov    $0x0,%eax
   0x000000000040066b <+181>:	add    $0x28,%rsp
   0x000000000040066f <+185>:	pop    %rbx
   0x0000000000400670 <+186>:	pop    %rbp
   0x0000000000400671 <+187>:	retq   
End of assembler dump.
(gdb) quit
